import random
import shutil
from typing import Optional

from ..constants import APP_VERSION

label_ascii_title_text = r"""
 _____ _                _                           
|_   _(_)_ __ ___   ___| | __ _ _ __  ___  ___ _ __ 
  | | | | '_ ` _ \ / _ \ |/ _` | '_ \/ __|/ _ \ '__|
  | | | | | | | | |  __/ | (_| | |_) \__ \  __/ |   
  |_| |_|_| |_| |_|\___|_|\__,_| .__/|___/\___|_|   
                               |_|                  
"""

label_ascii_moniker_text = r"""
█████████████████████████████████████████████████████████████████████████████
█▌░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▐█
█▌░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▐█
█▌░░░░░░░░░░░█████░░░░███████░░░░███████████░░░██████████░░░█████░█████░░░░▐█
█▌░░░░░░░░░░░░███░░░███░░░░░███░░░███░░░░░███░░░███░░░░███░░░███░░░███░░░░░▐█
█▌░░░░░░░░░░░░███░░███░░░░░░░███░░███░░░░░███░░░███░░░░░███░░░███░███░░░░░░▐█
█▌░░░░░░░░░░░░███░░███░░░░░░░███░░██████████░░░░███░░░░░███░░░░█████░░░░░░░▐█
█▌░░░░░░░░░░░░███░░███░░░░░░░███░░███░░░░░███░░░███░░░░░███░░░░░███░░░░░░░░▐█
█▌░░░░░███░░░░███░░░███░░░░░███░░░███░░░░░███░░░███░░░░███░░░░░░███░░░░░░░░▐█
█▌░░░░░░████████░░░░░░███████░░░░█████░░░█████░██████████░░░░░░█████░░░░░░░▐█
█▌░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▐█
█▌░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▐█
█▌░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▐█
█████████████████████████████████████████████████████████████████████████████
"""
label_ascii_moniker_alt_text = r"""
┌───────────────────────────────────────────────────────────────────────┐
│·······································································│
│·······································································│
│·······································································│
│·······································································│
│············█████···███████···███████████··██████████··█████·█████·····│
│···········░░███··███░░░░░███░░███░░░░░███░░███░░░░███░░███·░░███······│
│············░███·███·····░░███░███····░███·░███···░░███░░███·███·······│
│············░███░███······░███░██████████··░███····░███·░░█████········│
│············░███░███······░███░███░░░░░███·░███····░███··░░███·········│
│······███···░███░░███·····███·░███····░███·░███····███····░███·········│
│·····░░████████··░░░███████░··█████···███████████████·····█████········│
│······░░░░░░░░·····░░░░░░░···░░░░░···░░░░░░░░░░░░░░░·····░░░░░·········│
│·······································································│
│·······································································│
│·······································································│
│·······································································│
└───────────────────────────────────────────────────────────────────────┘
"""

label_ascii_moniker_slanted_text = r"""

______/\\\\\\\\\\\_______/\\\\\_________/\\\\\\\\\______/\\\\\\\\\\\\_____/\\\________/\\\_!!!!!!!!
!_____\/////\\\///______/\\\///\\\_____/\\\///////\\\___\/\\\////////\\\__\///\\\____/\\\/__!!!!!!!
!!_________\/\\\_______/\\\/__\///\\\__\/\\\_____\/\\\___\/\\\______\//\\\___\///\\\/\\\/____!!!!!!
!!!_________\/\\\______/\\\______\//\\\_\/\\\\\\\\\\\/____\/\\\_______\/\\\_____\///\\\/______!!!!!
!!!!_________\/\\\_____\/\\\_______\/\\\_\/\\\//////\\\____\/\\\_______\/\\\_______\/\\\_______!!!!
!!!!!_________\/\\\_____\//\\\______/\\\__\/\\\____\//\\\___\/\\\_______\/\\\_______\/\\\_______!!!
!!!!!!__/\\\___\/\\\______\///\\\__/\\\____\/\\\_____\//\\\__\/\\\_______/\\\________\/\\\_______!!
!!!!!!!_\//\\\\\\\\\_________\///\\\\\/_____\/\\\______\//\\\_\/\\\\\\\\\\\\/_________\/\\\_______!
!!!!!!!!__\/////////____________\/////_______\///________\///__\////////////___________\///________
"""
label_ascii_moniker_bold_text = r"""
▐▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▌
▐░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▌
▐░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▌
▐░░░░░▄▄▄▄▄▄▄▄▄▄▄░░▄▄▄▄▄▄▄▄▄▄▄░░▄▄▄▄▄▄▄▄▄▄▄░░▄▄▄▄▄▄▄▄▄▄░░░▄░░░░░░░░░▄░░░░░▌
▐░░░░▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░▌░▐░▌░░░░░░░▐░▌░░░░▌
▐░░░░░▀▀▀▀▀█░█▀▀▀░▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░▌░░░░░░░▐░▌░░░░▌
▐░░░░░░░░░░▐░▌░░░░▐░▌░░░░░░░▐░▌▐░▌░░░░░░░▐░▌▐░▌░░░░░░░▐░▌▐░▌░░░░░░░▐░▌░░░░▌
▐░░░░░░░░░░▐░▌░░░░▐░▌░░░░░░░▐░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌░░░░░░░▐░▌▐░░█▄▄▄▄▄▄▄█░▌░░░░▌
▐░░░░░░░░░░▐░▌░░░░▐░▌░░░░░░░▐░▌▐░░░░░░░░░░░▌▐░▌░░░░░░░▐░▌▐░░░░░░░░░░░▌░░░░▌
▐░░░░░░░░░░▐░▌░░░░▐░▌░░░░░░░▐░▌▐░█▀▀▀▀█░█▀▀░▐░▌░░░░░░░▐░▌░▀▀▀▀█░█▀▀▀▀░░░░░▌
▐░░░░░░░░░░▐░▌░░░░▐░▌░░░░░░░▐░▌▐░▌░░░░░▐░▌░░▐░▌░░░░░░░▐░▌░░░░░▐░▌░░░░░░░░░▌
▐░░░░░▄▄▄▄▄█░▌░░░░▐░█▄▄▄▄▄▄▄█░▌▐░▌░░░░░░▐░▌░▐░█▄▄▄▄▄▄▄█░▌░░░░░▐░▌░░░░░░░░░▌
▐░░░░▐░░░░░░░▌░░░░▐░░░░░░░░░░░▌▐░▌░░░░░░░▐░▌▐░░░░░░░░░░▌░░░░░░▐░▌░░░░░░░░░▌
▐░░░░░▀▀▀▀▀▀▀░░░░░░▀▀▀▀▀▀▀▀▀▀▀░░▀░░░░░░░░░▀░░▀▀▀▀▀▀▀▀▀▀░░░░░░░░▀░░░░░░░░░░▌
▐░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▌
▐░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░░▌
▐▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▌
"""


def get_terminal_width(default: int = 80) -> int:
    """
    Get the current terminal width in columns.
    Returns the width or the provided default if unavailable (e.g., not a TTY).
    Args:
        default: Fallback width if terminal size cannot be determined.
    Returns:
        int: Terminal width in columns.
    """
    try:
        return shutil.get_terminal_size((default, 20)).columns
    except Exception:
        return default


def center_ascii(ascii_text: str, width: Optional[int] = None) -> str:
    """
    Center each line of ASCII text for terminal display.
    Args:
        ascii_text: The ASCII art string to center.
        width: Optional terminal width. If None, uses get_terminal_width().
    Returns:
        str: Centered ASCII art as a single string.
    """
    if width is None:
        width = get_terminal_width()
    return "\n".join(line.center(width) for line in ascii_text.strip("\n").split("\n"))


def print_centered_ascii(ascii_text: str):
    """
    Print centered ASCII art to the terminal.
    Args:
        ascii_text: The ASCII art string to print centered.
    """
    print(center_ascii(ascii_text))


def get_centered_title_label() -> str:
    """
    Get the centered ASCII title label for Timelapser.
    Returns:
        str: Centered ASCII title art.
    """
    return center_ascii(label_ascii_title_text)


def get_centered_moniker(label_type: str = "default") -> str:
    """
    Get the centered ASCII moniker label for Timelapser.
    Args:
        label_type: One of 'default', 'alt', 'bold', 'slanted'.
    Returns:
        str: Centered ASCII moniker art.
    """
    moniker_map = {
        "default": label_ascii_moniker_text,
        "alt": label_ascii_moniker_alt_text,
        "bold": label_ascii_moniker_bold_text,
        "slanted": label_ascii_moniker_slanted_text,
    }
    ascii_text = moniker_map.get(label_type, label_ascii_moniker_text)
    return center_ascii(ascii_text)


def get_centered_version_label() -> str:
    """
    Get the centered ASCII version label for Timelapser.
    Returns:
        str: Centered ASCII version art.
    """
    return center_ascii(f"───── v{APP_VERSION} ─────")


def print_welcome_message():
    """
    Print the welcome message with a randomly selected centered ASCII moniker art.
    """
    print("\n\n")
    moniker_types = ["default", "alt", "bold", "slanted"]
    label_type = random.choice(moniker_types)
    print_centered_ascii(get_centered_moniker(label_type))
    print("\n")
    print_centered_ascii(get_centered_title_label())
    print("\n")
    print_centered_ascii(get_centered_version_label())
    print("\n\n")
